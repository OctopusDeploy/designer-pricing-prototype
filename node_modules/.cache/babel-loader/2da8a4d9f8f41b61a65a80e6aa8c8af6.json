{"ast":null,"code":"var _jsxFileName = \"/Users/jessicaross/Documents/GitHub/designer-pricing-prototype/src/pages/pricing/components/CloudPricing.tsx\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { Box, Grid, Input, Slider, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { formatCcy, handleInvalidValue } from \"../../../utils\";\nconst useStyles = makeStyles({\n  root: {\n    width: 250\n  },\n  input: {\n    width: 42 // 42\n\n  }\n});\nconst FREE_TARGETS = 10;\nconst FREE_MINUTES = 100;\nconst COST_PER_TARGET = 10;\nconst COST_PER_MINUTE = 0.03;\nconst HIGH_AVAILABILITY_TARGETS = 100;\n\nconst isChargedTargets = valueTargets => {\n  return valueTargets > FREE_TARGETS;\n};\n\nconst isChargedMinutes = valueMinutes => {\n  return valueMinutes > FREE_MINUTES;\n};\n\nconst CloudPricing = () => {\n  const classes = useStyles(); // Deployment Targets\n\n  const [valueTargets, setValueTargets] = useState(FREE_TARGETS);\n\n  const handleSliderChange = (event, newValue) => {\n    setValueTargets(newValue);\n    setLastTargetsSliderVal(valueTargets);\n  };\n\n  const handleBlur = () => {\n    if (valueTargets < 0) {\n      setValueTargets(0);\n    } else if (valueTargets > 10000) {\n      setValueTargets(10000);\n    }\n  }; // Single spot where targets slider value to be set by the user\n\n\n  const updateUserTargets = valueTargets => {\n    setValidTargets(valueTargets); // update display value\n\n    setLastTargetsSliderVal(valueTargets); // remember user's last value\n    // reset checkbox if targets slider value is not eligible to HA\n\n    if (valueTargets < HIGH_AVAILABILITY_TARGETS) {\n      setHaCheckboxVal(false);\n    }\n  };\n\n  const setValidTargets = num => {\n    let vaildVal = handleInvalidValue(num);\n    setValueTargets(vaildVal);\n  }; // Deployment minutes\n\n\n  const [valueMinutes, setValueMinutes] = useState(FREE_MINUTES);\n\n  const handleSliderChangeMinutes = (event, newValueMinutes) => {\n    setValueMinutes(newValueMinutes);\n  };\n\n  const handleBlurMinutes = () => {\n    if (valueMinutes < 0) {\n      setValueMinutes(0);\n    } else if (valueMinutes > 10000) {\n      setValueMinutes(10000);\n    }\n  };\n\n  const setValidMinutes = num => {\n    let vaildVal = handleInvalidValue(num);\n    setValueMinutes(vaildVal);\n  }; // High Availablity\n\n\n  const [LastTargetsSliderVal, setLastTargetsSliderVal] = useState(FREE_TARGETS);\n  const [haCheckboxVal, setHaCheckboxVal] = useState(false);\n  const isEligibleHA = valueTargets >= HIGH_AVAILABILITY_TARGETS;\n  const renderHaChecked = haCheckboxVal || isEligibleHA;\n\n  const highAvailabilityCheck = e => {\n    // Updating checkbox state\n    const newHaCheckboxVal = e.target.checked;\n    setHaCheckboxVal(newHaCheckboxVal); // [ ] => [x]\n\n    if (newHaCheckboxVal) {\n      // Set high availablility value\n      if (valueTargets < HIGH_AVAILABILITY_TARGETS) {\n        setValueTargets(HIGH_AVAILABILITY_TARGETS);\n      }\n    } else {\n      // [x] => [ ]\n      // Reset to user's last input value\n      setValueTargets(LastTargetsSliderVal);\n    }\n  }; // Calculations\n\n\n  const calcChargedTargets = valueTargets => {\n    if (isChargedTargets(valueTargets)) {\n      return valueTargets - FREE_TARGETS;\n    } else {\n      return 0;\n    }\n  };\n\n  const calcChargedMinutes = valueMinutes => {\n    if (isChargedMinutes(valueMinutes)) {\n      return valueMinutes - FREE_MINUTES;\n    } else {\n      return 0;\n    }\n  };\n\n  const targetsPrice = calcChargedTargets(valueTargets) * COST_PER_TARGET;\n  const minutesPrice = calcChargedMinutes(valueMinutes) * COST_PER_MINUTE;\n  const totalPrice = targetsPrice + minutesPrice;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Cloud\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, formatCcy(totalPrice), /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \" / Month\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"High availability feature included in plan with more than 100 deployment\"), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"For\", \" \", valueTargets <= FREE_TARGETS ? ` up to 10 deployment targets` : \" up to \" + valueTargets + \" deployment targets \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: typeof valueTargets === \"number\" ? valueTargets : 0,\n    onChange: handleSliderChange,\n    \"aria-labelledby\": \"input-slider\",\n    min: 10,\n    max: 5000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: classes.input,\n    value: valueTargets,\n    margin: \"dense\",\n    onChange: e => updateUserTargets(parseInt(e.target.value, 10)),\n    onBlur: handleBlur,\n    inputProps: {\n      step: 10,\n      min: 10,\n      max: 5000,\n      type: \"number\",\n      \"aria-labelledby\": \"input-slider\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, \"For\", \" \", valueMinutes <= FREE_TARGETS ? ` free deployment minutes ` : \" \" + valueMinutes + \" deployment minutes \"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: typeof valueMinutes === \"number\" ? valueMinutes : 0,\n    onChange: handleSliderChangeMinutes,\n    \"aria-labelledby\": \"input-slider-minutes\",\n    min: 100,\n    max: 10000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: classes.input,\n    value: valueMinutes,\n    margin: \"dense\",\n    onChange: e => setValidMinutes(parseInt(e.target.value, 10)),\n    onBlur: handleBlurMinutes,\n    inputProps: {\n      step: 10,\n      min: 100,\n      max: 10000,\n      type: \"number\",\n      \"aria-labelledby\": \"input-slider-minutes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default CloudPricing;","map":{"version":3,"sources":["/Users/jessicaross/Documents/GitHub/designer-pricing-prototype/src/pages/pricing/components/CloudPricing.tsx"],"names":["React","useState","Box","Grid","Input","Slider","Typography","makeStyles","formatCcy","handleInvalidValue","useStyles","root","width","input","FREE_TARGETS","FREE_MINUTES","COST_PER_TARGET","COST_PER_MINUTE","HIGH_AVAILABILITY_TARGETS","isChargedTargets","valueTargets","isChargedMinutes","valueMinutes","CloudPricing","classes","setValueTargets","handleSliderChange","event","newValue","setLastTargetsSliderVal","handleBlur","updateUserTargets","setValidTargets","setHaCheckboxVal","num","vaildVal","setValueMinutes","handleSliderChangeMinutes","newValueMinutes","handleBlurMinutes","setValidMinutes","LastTargetsSliderVal","haCheckboxVal","isEligibleHA","renderHaChecked","highAvailabilityCheck","e","newHaCheckboxVal","target","checked","calcChargedTargets","calcChargedMinutes","targetsPrice","minutesPrice","totalPrice","parseInt","value","step","min","max","type"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Box, Grid, Input, Slider, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { formatCcy, handleInvalidValue } from \"../../../utils\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 250,\n  },\n  input: {\n    width: 42, // 42\n  },\n});\n\nconst FREE_TARGETS = 10;\nconst FREE_MINUTES = 100;\nconst COST_PER_TARGET = 10;\nconst COST_PER_MINUTE = 0.03;\nconst HIGH_AVAILABILITY_TARGETS = 100;\n\nconst isChargedTargets = (valueTargets: number | string): boolean => {\n  return valueTargets > FREE_TARGETS;\n};\n\nconst isChargedMinutes = (valueMinutes: number | string): boolean => {\n  return valueMinutes > FREE_MINUTES;\n};\n\nconst CloudPricing = () => {\n  const classes = useStyles();\n\n  // Deployment Targets\n  const [valueTargets, setValueTargets] = useState(FREE_TARGETS);\n\n  const handleSliderChange = (event: any, newValue: any) => {\n    setValueTargets(newValue);\n    setLastTargetsSliderVal(valueTargets);\n  };\n\n  const handleBlur = () => {\n    if (valueTargets < 0) {\n      setValueTargets(0);\n    } else if (valueTargets > 10000) {\n      setValueTargets(10000);\n    }\n  };\n\n  // Single spot where targets slider value to be set by the user\n  const updateUserTargets = (valueTargets: number) => {\n    setValidTargets(valueTargets); // update display value\n    setLastTargetsSliderVal(valueTargets); // remember user's last value\n\n    // reset checkbox if targets slider value is not eligible to HA\n    if (valueTargets < HIGH_AVAILABILITY_TARGETS) {\n      setHaCheckboxVal(false);\n    }\n  };\n  const setValidTargets = (num: number) => {\n    let vaildVal = handleInvalidValue(num);\n    setValueTargets(vaildVal);\n  };\n\n  // Deployment minutes\n  const [valueMinutes, setValueMinutes] = useState<\n    number | string | Array<number | string>\n  >(FREE_MINUTES);\n\n  const handleSliderChangeMinutes = (\n    event: any,\n    newValueMinutes: number | number[]\n  ) => {\n    setValueMinutes(newValueMinutes);\n  };\n\n  const handleBlurMinutes = () => {\n    if (valueMinutes < 0) {\n      setValueMinutes(0);\n    } else if (valueMinutes > 10000) {\n      setValueMinutes(10000);\n    }\n  };\n  const setValidMinutes = (num: number) => {\n    let vaildVal = handleInvalidValue(num);\n    setValueMinutes(vaildVal);\n  };\n\n  // High Availablity\n  const [LastTargetsSliderVal, setLastTargetsSliderVal] = useState(\n    FREE_TARGETS\n  );\n  const [haCheckboxVal, setHaCheckboxVal] = useState(false);\n  const isEligibleHA = valueTargets >= HIGH_AVAILABILITY_TARGETS;\n  const renderHaChecked = haCheckboxVal || isEligibleHA;\n  const highAvailabilityCheck = (e: { target: { checked: any } }) => {\n    // Updating checkbox state\n    const newHaCheckboxVal = e.target.checked;\n    setHaCheckboxVal(newHaCheckboxVal);\n    // [ ] => [x]\n    if (newHaCheckboxVal) {\n      // Set high availablility value\n      if (valueTargets < HIGH_AVAILABILITY_TARGETS) {\n        setValueTargets(HIGH_AVAILABILITY_TARGETS);\n      }\n    } else {\n      // [x] => [ ]\n      // Reset to user's last input value\n      setValueTargets(LastTargetsSliderVal);\n    }\n  };\n\n  // Calculations\n  const calcChargedTargets = (valueTargets: any) => {\n    if (isChargedTargets(valueTargets)) {\n      return valueTargets - FREE_TARGETS;\n    } else {\n      return 0;\n    }\n  };\n\n  const calcChargedMinutes = (valueMinutes: any) => {\n    if (isChargedMinutes(valueMinutes)) {\n      return valueMinutes - FREE_MINUTES;\n    } else {\n      return 0;\n    }\n  };\n\n  const targetsPrice = calcChargedTargets(valueTargets) * COST_PER_TARGET;\n  const minutesPrice = calcChargedMinutes(valueMinutes) * COST_PER_MINUTE;\n  const totalPrice = targetsPrice + minutesPrice;\n\n  return (\n    <>\n      <Box>\n        <h2>Cloud</h2>\n        <p>\n          <span>\n            {formatCcy(totalPrice)}\n            <sup>*</sup>\n          </span>\n          <span> / Month</span>\n        </p>\n        <p>\n          High availability feature included in plan with more than 100\n          deployment\n        </p>\n\n        <Grid item>\n          <Typography>\n            For{\" \"}\n            {valueTargets <= FREE_TARGETS\n              ? ` up to 10 deployment targets`\n              : \" up to \" + valueTargets + \" deployment targets \"}\n          </Typography>\n\n          <div className={classes.root}>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <Slider\n                  value={typeof valueTargets === \"number\" ? valueTargets : 0}\n                  onChange={handleSliderChange}\n                  aria-labelledby=\"input-slider\"\n                  min={10}\n                  max={5000}\n                />\n              </Grid>\n              <Grid item>\n                <Input\n                  className={classes.input}\n                  value={valueTargets}\n                  margin=\"dense\"\n                  onChange={(e) =>\n                    updateUserTargets(parseInt(e.target.value, 10))\n                  }\n                  onBlur={handleBlur}\n                  inputProps={{\n                    step: 10,\n                    min: 10,\n                    max: 5000,\n                    type: \"number\",\n                    \"aria-labelledby\": \"input-slider\",\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </div>\n          <div className={classes.root}>\n            <Typography>\n              For{\" \"}\n              {valueMinutes <= FREE_TARGETS\n                ? ` free deployment minutes `\n                : \" \" + valueMinutes + \" deployment minutes \"}\n            </Typography>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <Slider\n                  value={typeof valueMinutes === \"number\" ? valueMinutes : 0}\n                  onChange={handleSliderChangeMinutes}\n                  aria-labelledby=\"input-slider-minutes\"\n                  min={100}\n                  max={10000}\n                />\n              </Grid>\n              <Grid item>\n                <Input\n                  className={classes.input}\n                  value={valueMinutes}\n                  margin=\"dense\"\n                  onChange={(e) =>\n                    setValidMinutes(parseInt(e.target.value, 10))\n                  }\n                  onBlur={handleBlurMinutes}\n                  inputProps={{\n                    step: 10,\n                    min: 100,\n                    max: 10000,\n                    type: \"number\",\n                    \"aria-labelledby\": \"input-slider-minutes\",\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </div>\n        </Grid>\n      </Box>\n    </>\n  );\n};\nexport default CloudPricing;\n"]},"metadata":{},"sourceType":"module"}